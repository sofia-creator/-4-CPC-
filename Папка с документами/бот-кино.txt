from email.message import Message
import logging
import sqlite3
import requests
from aiogram import Bot, Dispatcher, executor, types
from aiogram.types import ContentType

import keyboard as kb
from recommendation import reccomend_movie, start_movies
from helping_func import soup, getdata, insert
import time
import datetime


conn = sqlite3.connect("shows.db")
cursor = conn.cursor()

API_TOKEN = "5748846092:AAEewwUjxSKrwHIZpxbk39IMkgQ11Uv-qok"

logging.basicConfig(level=logging.INFO)

bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)


def getdata(url):
    r = requests.get(url)
    return r.text


@dp.callback_query_handler(lambda c: c.data == "recommend")
async def process_callback_recommend(callback_query: types.CallbackQuery):
    random_show = start_movies()
    img_url = soup(random_show)

    await bot.answer_callback_query(callback_query.id)
    await bot.send_photo(callback_query.from_user.id, photo=img_url, caption=f"{random_show}", reply_markup=kb.inline_kb1)


@dp.callback_query_handler(lambda c: c.data == "–ù—Ä–∞–≤–∏—Ç—Å—è")
async def process_like_text(call: types.CallbackQuery):
    random_show = call.message.caption

    cursor.execute("INSERT INTO movies (title,timestamp,date) VALUES(?,?,?);",
                   (random_show, int(time.time()), str(datetime.date.today().strftime("%d-%m-%Y"))))

    recommended = reccomend_movie(random_show, cursor)
    img_url = soup(recommended)

    cursor.connection.commit()
    await bot.answer_callback_query(call.id, text="–í–∞–º —ç—Ç–æ –ø–æ–Ω—Ä–∞–≤–∏–ª–æ—Å—å!?\n–ù—É –Ω–∞ –µ—â–µ")
    await bot.send_photo(call.from_user.id, photo=img_url, caption=f"{recommended}", reply_markup=kb.inline_kb1)


@dp.callback_query_handler(lambda c: c.data == "–ù–µ–Ω—Ä–∞–≤–∏—Ç—Å—è")
async def process_dislike_text(call: types.CallbackQuery):
    random_show = str(cursor.execute(
        "SELECT title FROM movies ORDER BY RANDOM() LIMIT 1;").fetchall()[0][0])
    img_url = soup(random_show)

    await bot.answer_callback_query(call.id, text="–ù–µ –ø–æ–Ω—Ä–∞–≤–∏–ª–æ—Å—å? –ù—É –∏ –ª–∞–¥–Ω–æ...", cache_time=50)
    await bot.send_photo(call.from_user.id, photo=img_url, caption=f"{random_show}", reply_markup=kb.inline_kb1)


@dp.message_handler(commands=["start"])
async def send_welcome(message: types.Message):
    await message.reply("–ü—Ä–∏–≤–µ—Ç!üòâ \n–Ø –±–æ—Ç CinemaProjectClub.\n–Ø –ø–æ–º–æ–≥—É –ø–æ–¥–æ–±—Ä–∞—Ç—å —Ñ–∏–ª—å–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ –¥–ª—è —Ç–µ–±—è.\n–ù–∞–ø–∏—à–∏ /help —á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —á—Ç–æ —è —É–º–µ—é!")


@dp.message_handler(commands=["help"])
async def process_help_command(message: types.Message):
    await message.reply("–ù–∞–ø–∏—à–∏ /recommend –∏ —è –ø—Ä–µ–¥–ª–æ–∂—É —Ç–µ–±–µ —Å–ª—É—á–∞–π–Ω—ã–π —Ñ–∏–ª—å–º. \n–ù–∞–ø–∏—Å–∞–≤ /info —Ç—ã –ø–æ–ª—É—á–∏—à—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–ª–≥–æ—Ä–∏—Ç–º–µ —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞\n–ß—Ç–æ–±—ã –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –Ω–∞—à–µ–º—É —á–∞—Ç—É, –ø–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ: https://t.me/+lT9zCCJ9ZGA1NWYy")

@dp.message_handler(commands=["info"])
async def process_info_command(message: types.Message):
    await message.reply("–ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤–∞—à–µ–π –æ—Ü–µ–Ω–∫–∏, –ø–æ—Å—Ç–∞–≤–∏–≤ –Ω—Ä–∞–≤–∏—Ç—Å—è, –±–æ—Ç –ø—Ä–µ–¥–ª–æ–∂–∏—Ç –ø–æ—Ö–æ–∂–∏–π —Ñ–∏–ª—å–º —Å –Ω–∞–∏–≤—ã—Å—à–µ–π –æ—Ü–µ–Ω–∫–æ–π. \n–ï—Å–ª–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã–π —Ñ–∏–ª—å–º –≤–∞–º –Ω–µ –Ω—Ä–∞–≤–∏—Ç—Å—è, –±–æ—Ç –ø—Ä–µ–¥–ª–æ–∂–∏—Ç –Ω–æ–≤—ã–π.")


@dp.message_handler(commands=["recommend"])
async def process_reccomend_command(message: types.Message):
    random_show = start_movies()
    img_url = soup(str(random_show))
    await bot.send_photo(message.from_user.id, photo=img_url, caption=f"{random_show}", reply_to_message_id=message.message_id, reply_markup=kb.inline_kb1)


@dp.message_handler()
async def echo(message: types.Message):
    await message.answer(message.text)


if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)